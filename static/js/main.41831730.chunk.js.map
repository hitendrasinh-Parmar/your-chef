{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-img.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Order/CheckoutSummery/CheckoutSummery.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummery/OrderSummery.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummery/CheckoutSummery.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Logout/Logout.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Meat","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","color","Burger","buildControl","BuildControl","Label","label","More","added","Less","removed","disabled","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummery","ingredientSummery","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancleHandler","purchaseContinueHandler","onInitPurchase","updatePurchaseState","sum","console","log","onInitIngredients","disabledInfo","ings","orderSummery","onIngredientAdded","onIngredientRemoved","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummery","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","InputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdenfire","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","CheckoutSummery","match","component","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Logout","onLogout","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","SwitchAuthHandler","buildingBurger","autoRedirectPath","errorMessage","authRedirect","authRedirectPath","Classes","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","App","onTryAutoSignup","routes","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","newOrder","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.41831730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1y01d\",\"BreadTop\":\"BurgerIngredient_BreadTop__2lZyM\",\"Seeds1\":\"BurgerIngredient_Seeds1__Kg0k1\",\"Seeds2\":\"BurgerIngredient_Seeds2__2vSXo\",\"Meat\":\"BurgerIngredient_Meat__uDRCP\",\"Cheese\":\"BurgerIngredient_Cheese__31lmR\",\"Salad\":\"BurgerIngredient_Salad__2O2NA\",\"Bacon\":\"BurgerIngredient_Bacon__3-GeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2IPN9\",\"Open\":\"SideDrawer_Open__2jjhT\",\"Close\":\"SideDrawer_Close__3MZ7O\",\"Logo\":\"SideDrawer_Logo__71B8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1b0DE\",\"Label\":\"BuildControl_Label__1S7kJ\",\"Less\":\"BuildControl_Less__1HMdg\",\"More\":\"BuildControl_More__2M-3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__piVat\",\"Label\":\"Input_Label__2jVuX\",\"InputElement\":\"Input_InputElement__pxmEj\",\"Invalid\":\"Input_Invalid__hrUJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1zKj_\",\"Logo\":\"Toolbar_Logo__2usnd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1AT2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__mVNzT\",\"active\":\"NavigationItem_active__3lBqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2awep\",\"OrderButton\":\"BuildControls_OrderButton__3iNJS\",\"enable\":\"BuildControls_enable__1ulil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__XfKfJ\",\"Success\":\"Button_Success__2FVDK\",\"Danger\":\"Button_Danger__SBb9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1MRYB\"};","module.exports = __webpack_public_path__ + \"static/media/burger-img.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2EEVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1mwF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__Mca3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__QLP1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ihykU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Vbek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummery_CheckoutSummary__1IFTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__RTRv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1UsQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2uNbT\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-img.png';\r\nimport classes from './Logo.module.css';\r\nconst logo = (props) =>(\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Burger\"/>\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) =>(\r\n         \r\n            <li className={classes.NavigationItem}>\r\n                 <NavLink \r\n                 exact={props.exact}\r\n                 to={props.link}\r\n                 activeClassName={classes.active}>{props.children}</NavLink>\r\n            </li>\r\n       \r\n);\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        { !props.isAuthenticated\r\n         ? <NavigationItem link =\"/auth\">Login</NavigationItem>\r\n         : <NavigationItem link =\"/logout\">Logout</NavigationItem>\r\n        }\r\n\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) =>{\r\n    \r\nreturn(    \r\n\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n}\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\nconst backdrop = (props) =>(\r\n   \r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n \r\n);\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses= [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer,classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        \r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n            \r\n            <nav>\r\n                <NavigationItems  isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../../hoc/Aux'\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state={\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer :false});\r\n    }\r\n    //for menu btm to toggle the sideDrawer\r\n    sideDrawerToggleHandler = () =>{\r\n        this.setState( (prevState) =>{\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    } \r\n    render(){\r\n        return (\r\n            <Aux>\r\n            <Toolbar\r\n            isAuth = {this.props.isAuthenticated}\r\n            drawerToggleClicked={this.sideDrawerToggleHandler} \r\n            />\r\n            <SideDrawer isAuth = {this.props.isAuthenticated}\r\n                        closed={this.sideDrawerClosedHandler}\r\n                        open={this.state.showSideDrawer}\r\n            />\r\n        \r\n        <main className={classes.Content} >\r\n            {this.props.children}\r\n        </main>\r\n        </Aux>\r\n        )\r\n\r\n    }\r\n   \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(Layout);","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:'https://your-chef-c5f25.firebaseio.com/'\r\n});\r\nexport default instance;","import React,{Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render (){\r\n        let ingredient = null;\r\n        switch (this.props.type){\r\n             case (\"bread-bottom\"):\r\n             ingredient = <div className={classes.BreadBottom} ></div>;\r\n             break; \r\n    \r\n             case (\"bread-top\"):\r\n             ingredient = <div className={classes.BreadTop} >\r\n             <div className={classes.Seeds1} ></div>\r\n             <div className={classes.Seeds2} ></div>\r\n             </div>;\r\n             break;\r\n    \r\n            case (\"cheese\"):\r\n             ingredient = <div className={classes.Cheese} ></div>;\r\n             break; \r\n             \r\n            case (\"meat\"):\r\n                ingredient = <div className={classes.Meat} ></div>;\r\n                break; \r\n    \r\n            case (\"salad\"):\r\n                    ingredient = <div className={classes.Salad} ></div>;\r\n                    break; \r\n    \r\n            case (\"bacon\"):\r\n                    ingredient = <div className={classes.Bacon} ></div>;\r\n                     break;\r\n            default:\r\n                ingredient = null; \r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) =>{\r\n        let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => { //igKey = salad,bacon...\r\n                return [...Array(props.ingredients[igKey])] //[salad] one at time salad value = [2] then map two time same element\r\n                .map((_,i) =>{\r\n                      return  <BurgerIngredient key={igKey + i} type={igKey} />; //key = salad0,salad1,backon0,cheese0,cheese1\r\n                });\r\n        })\r\n        .reduce( (arr, el) =>{ //arr gives previous value and al gives current value\r\n                return arr.concat(el) //returns total ingredients submmation\r\n        },[]);\r\n\r\n        if(transformedIngredients.length === 0){\r\n                transformedIngredients = <p style={{color: 'brown'}}>Please start adding ingredients!</p>\r\n        }\r\n        return(\r\n                <div  className={classes.Burger} >\r\n\r\n                        <BurgerIngredient type =\"bread-top\"/>\r\n                       {transformedIngredients}\r\n                        <BurgerIngredient type =\"bread-bottom\"/>\r\n                </div>\r\n        );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) =>(\r\n  <div className={classes.BuildControl} >\r\n      <div className={classes.Label} >\r\n          {props.label}\r\n      </div>\r\n      <button className={classes.More}\r\n              onClick={props.added} \r\n              >Add</button>\r\n      <button className={classes.Less}  \r\n              onClick={props.removed}\r\n              disabled={props.disabled}>Remove</button>\r\n   \r\n  </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    \r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added ={ () => props.ingredientAdded(ctrl.type)}\r\n                removed ={ () => props.ingredientRemoved(ctrl.type)}\r\n                disabled = {props.disabled[ctrl.type]}\r\n                />\r\n        ))}\r\n       <button className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}\r\n                 >{props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React,{Component} from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps,nextState){  \r\n            return nextProps.show !== this.props.show || nextProps.children !== this.props.children;    \r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('update1');\r\n    // }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className={classes.Modal} \r\n             style={{\r\n                 transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                 opacity: this.props.show ? '1' : '0'\r\n             }}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>\r\n        )\r\n \r\n    }\r\n}\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n    className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n> {props.children}</button>\r\n); \r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Aux'\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummery extends Component {\r\n    // componentWillUpdate(){\r\n    //     console.log('update');\r\n    // }\r\n   //can be function component\r\n    render(){\r\n            \r\n        const ingredientSummery = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (<li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:{this.props.ingredients[igKey]}\r\n            </li>);\r\n        })\r\n        \r\n        \r\n            return(\r\n                <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>\r\n                A delicious burger with the following ingredients:\r\n                    </p>\r\n            <ul>\r\n                {ingredientSummery}\r\n\r\n            </ul>\r\n            <p><strong>Total Price:{this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCLE</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n                </Aux >\r\n\r\n            );\r\n    }\r\n\r\n}   \r\n\r\n\r\n\r\n\r\nexport default OrderSummery;","import React from 'react';\r\nimport './Spinner.css'\r\nconst spinner = () => (\r\n  \r\n    <div className=\"spinner\">\r\n    <div className=\"rect1\"></div>\r\n    <div className=\"rect2\"></div>\r\n    <div className=\"rect3\"></div>\r\n    <div className=\"rect4\"></div>\r\n    <div className=\"rect5\"></div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux'\r\nconst withErrorHandler = (WrappedComponent, axios) =>{\r\n    return class extends Component{\r\n        state={\r\n            error:null,\r\n        }\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                    this.setState({error: error});\r\n            });\r\n        }\r\n        componentWillUnmont(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmedHandler = () =>{\r\n                this.setState({error:null})\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                            modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n    \r\n                </Aux>\r\n            )\r\n        }\r\n    } \r\n\r\n}\r\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout( () => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n}; \r\nexport const auth = (email,password,isSignUp) => {\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password : password,\r\n            returnSecureToken : true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCYNupruIe0o2LjonZYWKdV7MGTuzouu44';\r\n        if(!isSignUp){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCYNupruIe0o2LjonZYWKdV7MGTuzouu44';\r\n        }\r\n        axios.post(url,authData)\r\n        .then(response => {   \r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId',response.data.localId)\r\n            dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch( err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout( ( expirationDate.getTime() - new Date().getTime() ) / 1000));\r\n            } else {\r\n                dispatch(logout());\r\n            }            \r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React,{ Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Aux';\r\nimport axios from '../../axios-orders';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'; \r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        purchasing:false,\r\n      }\r\n      componentDidMount(){\r\n          console.log(this.props);\r\n          this.props.onInitIngredients();    \r\n      }\r\n\r\n      purchaseHandler = () =>{\r\n        if(this.props.isAuthenticated){\r\n         this.setState({purchasing:true});\r\n        } else {\r\n          this.props.onSetAuthRedirectPath('/checkout');\r\n          this.props.history.push('/auth');\r\n        }\r\n      } //purchaseHandler for activating modal \r\n\r\n      purchaseCancleHandler = () =>{\r\n        this.setState({purchasing: false});\r\n      } // purchaseCancleHandler for Deactivating modal \r\n\r\n      purchaseContinueHandler = () =>{ \r\n        this.props.onInitPurchase(); \r\n        this.props.history.push('/checkout');\r\n      }  // purchaseContinueHandler for redirecting to checkout page\r\n\r\n      updatePurchaseState = (ingredients) =>{\r\n\r\n        const sum = Object.keys(ingredients)\r\n        .map( igKey =>{\r\n          return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) =>{\r\n          return sum + el;\r\n        },0)\r\n         return sum>0;\r\n      } //updatePurchaseState form orderButton activation\r\n\r\n\r\n      \r\n\r\n    render(){\r\n      const disabledInfo ={\r\n        ...this.props.ings\r\n      };\r\n      for(let key in disabledInfo){\r\n        disabledInfo[key] = disabledInfo[key] <= 0; // salad = true, bacon = false\r\n      }\r\n      // order summery for Modal data\r\n      let orderSummery = null;\r\n      \r\n      let burger = this.props.error ? <p>Ingredients Can't be loaded</p> :<Spinner />;\r\n      if(this.props.ings){\r\n        burger = ( \r\n          <Aux>  \r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls \r\n              ingredientAdded = {this.props.onIngredientAdded} \r\n              ingredientRemoved = {this.props.onIngredientRemoved}\r\n              disabled = {disabledInfo} // to disable more button\r\n              purchasable= {this.updatePurchaseState(this.props.ings)}//for order button\r\n              price = {this.props.price}\r\n              isAuth = {this.props.isAuthenticated}\r\n              ordered={this.purchaseHandler}/> \r\n          </Aux>\r\n        );\r\n        \r\n\r\n      orderSummery =  <OrderSummery \r\n      ingredients={this.props.ings} \r\n      purchaseCancelled={this.purchaseCancleHandler}\r\n      purchaseContinued={this.purchaseContinueHandler}\r\n      price={this.props.price} />;\r\n      }\r\n    \r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancleHandler}> \r\n                {orderSummery} \r\n                </Modal>            \r\n                {burger}\r\n            </Aux>\r\n            \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n      return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null  \r\n      };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath : (path) => dispatch(actions.setAuthRedirectPath(path))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\n\r\nexport const initIngredients = () => {\r\n            return dispatch => {\r\n                axios.get( 'https://your-chef-c5f25.firebaseio.com/ingredients.json' )\r\n                    .then( response => {\r\n                    dispatch(setIngredients(response.data));\r\n                    } )\r\n                    .catch( error => {\r\n                        dispatch(fetchIngredientsFailed());\r\n                    } );\r\n            };      \r\n};","import axios from '../../axios-orders'; \r\nimport * as actionType from './actionTypes';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData \r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_FAIL,\r\n        error: error    \r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_START\r\n    };\r\n};\r\nexport const purchaseBurger = ( orderData, token) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth='+ token, orderData )\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionType.PURCHASE_INIT\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n// FOR ORDER JS\r\n\r\n\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderfail = (error) => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_START,\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('./orders.json'+queryParams)\r\n        .then(res =>{\r\n            const fetchedOrders = [];\r\n            for ( let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders));\r\n        })\r\n        .catch( err => {\r\n            dispatch(fetchOrderfail());\r\n        });\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummery.module.css';\r\nconst checkoutSummery = (props) =>{\r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>\r\n                We hope it taste well!\r\n            </h1>\r\n            <div style = { {width: '300px', height : '300px', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n                    clicked={props.onCheckoutCancelled}\r\n                    >CANCLE</Button>\r\n            <Button btnType=\"Success\"\r\n                    clicked={props.onCheckoutContinued}\r\n            >CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummery;","import React from 'react';\r\nimport classes from './Input.module.css';\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const InputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        InputClasses.push(classes.Invalid);\r\n    }\r\n    switch(props.elementType)\r\n    {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}\r\n             value={props.value} \r\n             onChange={props.changed}/>;\r\n            break;\r\n\r\n        case ('textarea'):\r\n            inputElement = <textarea  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break; \r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                className={InputClasses.join(' ')} \r\n                value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n    }\r\n    return(\r\n     \r\n    <div  className={classes.Input}>\r\n    <label  className={classes.Label}>{props.Label}</label>\r\n           {inputElement}\r\n    </div>   \r\n    )\r\n};\r\nexport default input;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nclass ContactData extends Component{\r\n    state ={\r\n        orderForm:{\r\n                name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your Name'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n                },\r\n                street: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Street'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },                 \r\n                     valid : false,\r\n                     touched: false\r\n\r\n                },\r\n                zipCode: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'ZIP code'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:5\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                country: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Country'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Email'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                deliveryMethod: {\r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options:[\r\n                            { value: 'fastest', displayValue: 'Fastest' },\r\n                            { value: 'cheapest', displayValue: 'Cheapest' }\r\n                        ]\r\n                    },\r\n                    value: 'Fastest',\r\n                    validation:{},\r\n                    valid : true,\r\n                }\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) =>{\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for( let formElementIdenfire in this.state.orderForm){\r\n            formData[formElementIdenfire] = this.state.orderForm[formElementIdenfire].value; \r\n        }\r\n        const order ={\r\n          ingredients : this.props.ings,\r\n          price: this.props.price,\r\n          orderData : formData ,\r\n          userId: this.props.userId\r\n        }\r\n        \r\n        this.props.onOrderBurger(order,this.props.token);\r\n    }\r\n    inputChangedHandler = (event,inputIdentifier) =>{\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.touched = true;\r\n        console.log(updatedFormElement.valid);\r\n        let formIsValid = true;\r\n        for( let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {\r\n                    formElementArray.map( formElement =>(\r\n                        <Input \r\n                        key = {formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid = {!formElement.config.valid}\r\n                        touched = {formElement.config.touched}\r\n                        shouldValidate = {formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event,formElement.id)} />\r\n                    ))\r\n                }\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading){\r\n            form =<Spinner />;\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact data</h4>\r\n                 {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ings : state.burgerBuilder.ingredients,\r\n      price : state.burgerBuilder.totalPrice ,\r\n      loading : state.order.loading,\r\n      token: state.auth.token,\r\n      userId: state.auth.userId\r\n     }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))        \r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React, { Component } from 'react';\r\nimport CheckoutSummery from '../../components/Order/CheckoutSummery/CheckoutSummery';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport ContactData from './ContactData/ContactData';\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancledHandler = () => {\r\n        this.props.history.goBack();\r\n        // console.log(this.props);\r\n    } // checkoutCancledHandler go back to burger Builder page\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    // Route is used for displaying the contactData component\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null ;\r\n            summary = (    \r\n                <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummery\r\n                ingredients={this.props.ings}\r\n                onCheckoutCancelled={this.checkoutCancledHandler}\r\n                onCheckoutContinued={this.checkoutContinuedHandler} />\r\n                <Route path={this.props.match.path + '/contact-data'}  \r\n                      component={ContactData} />               \r\n                </div> \r\n              ); \r\n               \r\n        }\r\n        return summary;\r\n\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ings : state.burgerBuilder.ingredients,\r\n      purchased: state.order.purchased\r\n     };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\nfor( let ingredientsName in props.ingredients){\r\n    ingredients.push({name : ingredientsName,\r\n                     amount: props.ingredients[ingredientsName]\r\n                    });\r\n}\r\n\r\n    let ingredientsOutput = ingredients.map(ig =>{\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount}) </span>;\r\n    }) \r\n     \r\n    return(\r\n        <div className={classes.Order} >\r\n        <p>Ingredients : {ingredientsOutput}</p>\r\n        <p> <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong> </p>\r\n    </div>\r\n    );\r\n \r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'; \r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchOrders(this.props.token,this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n        if ( !this.props.loading ) {\r\n            orders = this.props.orders.map( order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ) )\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch( actions.fetchOrders(token,userId))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React,{Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n    render (){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React,{Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Classes from './Auth.module.css'; \r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\nclass Auth extends Component{\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                    isEmail:true\r\n                },\r\n                valid : false,\r\n                touched: false\r\n\r\n            },\r\n            password : {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid : false,\r\n                touched: false\r\n\r\n            }\r\n        },\r\n        isSignUp:true\r\n    }\r\n    componentDidMount() {\r\n        if(!this.props.buildingBurger && this.props.autoRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,controlName) =>{\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n       this.setState({controls: updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp);\r\n    }\r\n    SwitchAuthHandler = () => {\r\n        this.setState(prevState => {\r\n            return{ isSignUp: !prevState.isSignUp};\r\n        });\r\n    }\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementArray.push({\r\n                id: key,\r\n                config:this.state.controls[key]\r\n            });\r\n        }\r\n        let form = formElementArray.map( formElement =>(\r\n            <Input \r\n            key = {formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid = {!formElement.config.valid}\r\n            touched = {formElement.config.touched}\r\n            shouldValidate = {formElement.config.validation}\r\n            changed={(event) => this.inputChangedHandler(event,formElement.id)} />\r\n        \r\n\r\n        ));\r\n        if(this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n        let errorMessage =  null;\r\n        if(this.props.error){\r\n            errorMessage = (\r\n            <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n        return(\r\n            <div className={Classes.Auth}>\r\n                    {authRedirect}\r\n                    {errorMessage}\r\n                    <form onSubmit={this.submitHandler} >\r\n                        {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                    </form>                   \r\n        <Button \r\n        clicked = {this.SwitchAuthHandler}\r\n        btnType=\"Danger\">SWITCH TO {this.state.isSignUp ? 'SIGN IN' : 'SIGN UP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null ,\r\n    buildingBurger :state.burgerBuilder.building,\r\n    authRedirectPath : state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email,password,isSignUp) => dispatch(actions.auth(email,password,isSignUp)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport {Route,Switch,withRouter,Redirect} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Auth from './containers/Auth/Auth';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n  render(){\n    let routes = (\n      <Switch>\n      <Route path=\"/auth\" component = {Auth} />\n      <Route path=\"/your-chef\" exact component = {BurgerBuilder} /> \n      <Route path=\"/\" exact component = {BurgerBuilder} />\n      <Redirect to=\"/\" />\n      </Switch>\n    );\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n        <Route path=\"/checkout\" component = {Checkout} />\n        <Route path=\"/orders\" component = {Orders} />\n        <Route path=\"/auth\" component = {Auth} />\n        <Route path=\"/logout\" component = {Logout} />\n        <Route path=\"/your-chef\" exact component = {BurgerBuilder} /> \n        <Route path=\"/\" exact component = {BurgerBuilder} />\n        <Redirect to=\"/\" />\n        </Switch>            \n  \n      );\n    }\n    return(\n        <div>\n            <Layout>\n            {routes}\n            </Layout>\n        </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null \n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject  = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionType from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case actionType.PURCHASE_INIT:\r\n            return updateObject(state,{purchased:false});\r\n\r\n        case actionType.PURCHASE_BURGER_START:\r\n            return updateObject(state,{  loading: true});\r\n\r\n        case actionType.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData,{id: action.orderId});\r\n            return updateObject(state,{\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n\r\n        case actionType.PURCHASE_BURGER_FAIL:\r\n        return updateObject(state,{ loading: false});\r\n\r\n        case actionType.FETCH_ORDERS_START:\r\n        return updateObject(state,{ loading: true});\r\n\r\n        case actionType.FETCH_ORDERS_SUCCESS:\r\n        return updateObject(state,{ orders: action.orders, loading: false});\r\n\r\n        case actionType.FETCH_ORDERS_FAIL:\r\n        return updateObject(state,{ loading: false});\r\n\r\n        default:\r\n            return state;\r\n        }\r\n};\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject( state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n     } );\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\nconst authLogout = (state,action) => {\r\n    return updateObject(state,{token:null,userId:null})\r\n};\r\n\r\nconst setAuthRedirectPath = (state,action) => {\r\n    return updateObject(state,{authRedirectPath: action.path})\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore,applyMiddleware,combineReducers,compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder : burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\nconst store = createStore(rootReducer,composeEnhancers(\n  applyMiddleware(thunk)\n));\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(\n  app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
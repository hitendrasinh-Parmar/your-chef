{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-img.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Order/CheckoutSummery/CheckoutSummery.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummery/OrderSummery.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummery/CheckoutSummery.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","Aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Meat","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","color","Burger","buildControl","BuildControl","Label","label","More","added","Less","removed","disabled","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummery","ingredientSummery","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancleHandler","purchaseContinueHandler","onInitPurchase","history","push","updatePurchaseState","sum","console","log","onInitIngredients","disabledInfo","ings","orderSummery","onIngredientAdded","onIngredientRemoved","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummery","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","InputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdenfire","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","CheckoutSummery","path","match","component","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af34139a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1y01d\",\"BreadTop\":\"BurgerIngredient_BreadTop__2lZyM\",\"Seeds1\":\"BurgerIngredient_Seeds1__Kg0k1\",\"Seeds2\":\"BurgerIngredient_Seeds2__2vSXo\",\"Meat\":\"BurgerIngredient_Meat__uDRCP\",\"Cheese\":\"BurgerIngredient_Cheese__31lmR\",\"Salad\":\"BurgerIngredient_Salad__2O2NA\",\"Bacon\":\"BurgerIngredient_Bacon__3-GeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2IPN9\",\"Open\":\"SideDrawer_Open__2jjhT\",\"Close\":\"SideDrawer_Close__3MZ7O\",\"Logo\":\"SideDrawer_Logo__71B8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1b0DE\",\"Label\":\"BuildControl_Label__1S7kJ\",\"Less\":\"BuildControl_Less__1HMdg\",\"More\":\"BuildControl_More__2M-3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__piVat\",\"Label\":\"Input_Label__2jVuX\",\"InputElement\":\"Input_InputElement__pxmEj\",\"Invalid\":\"Input_Invalid__hrUJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1zKj_\",\"Logo\":\"Toolbar_Logo__2usnd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1AT2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__mVNzT\",\"active\":\"NavigationItem_active__3lBqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2awep\",\"OrderButton\":\"BuildControls_OrderButton__3iNJS\",\"enable\":\"BuildControls_enable__1ulil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__XfKfJ\",\"Success\":\"Button_Success__2FVDK\",\"Danger\":\"Button_Danger__SBb9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1MRYB\"};","module.exports = __webpack_public_path__ + \"static/media/burger-img.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2EEVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1mwF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__Mca3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__QLP1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ihykU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Vbek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummery_CheckoutSummary__1IFTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__RTRv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1UsQj\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-img.png';\r\nimport classes from './Logo.module.css';\r\nconst logo = (props) =>(\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Burger\"/>\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) =>(\r\n         \r\n            <li className={classes.NavigationItem}>\r\n                 <NavLink \r\n                 exact={props.exact}\r\n                 to={props.link}\r\n                 activeClassName={classes.active}>{props.children}</NavLink>\r\n            </li>\r\n       \r\n);\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) =>{\r\n    \r\nreturn(    \r\n\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n}\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\nconst backdrop = (props) =>(\r\n   \r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n \r\n);\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses= [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer,classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        \r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n            \r\n            <nav>\r\n                <NavigationItems />\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react';\r\nimport Aux from '../../hoc/Aux'\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state={\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer :false});\r\n    }\r\n    //for menu btm to toggle the sideDrawer\r\n    sideDrawerToggleHandler = () =>{\r\n        this.setState( (prevState) =>{\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    } \r\n    render(){\r\n        return (\r\n            <Aux>\r\n            <Toolbar\r\n            drawerToggleClicked={this.sideDrawerToggleHandler} \r\n            />\r\n            <SideDrawer closed={this.sideDrawerClosedHandler}\r\n                        open={this.state.showSideDrawer}\r\n            />\r\n        \r\n        <main className={classes.Content} >\r\n            {this.props.children}\r\n        </main>\r\n        </Aux>\r\n        )\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:'https://your-chef-c5f25.firebaseio.com/'\r\n});\r\nexport default instance;","import React,{Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render (){\r\n        let ingredient = null;\r\n        switch (this.props.type){\r\n             case (\"bread-bottom\"):\r\n             ingredient = <div className={classes.BreadBottom} ></div>;\r\n             break; \r\n    \r\n             case (\"bread-top\"):\r\n             ingredient = <div className={classes.BreadTop} >\r\n             <div className={classes.Seeds1} ></div>\r\n             <div className={classes.Seeds2} ></div>\r\n             </div>;\r\n             break;\r\n    \r\n            case (\"cheese\"):\r\n             ingredient = <div className={classes.Cheese} ></div>;\r\n             break; \r\n             \r\n            case (\"meat\"):\r\n                ingredient = <div className={classes.Meat} ></div>;\r\n                break; \r\n    \r\n            case (\"salad\"):\r\n                    ingredient = <div className={classes.Salad} ></div>;\r\n                    break; \r\n    \r\n            case (\"bacon\"):\r\n                    ingredient = <div className={classes.Bacon} ></div>;\r\n                     break;\r\n            default:\r\n                ingredient = null; \r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) =>{\r\n        let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => { //igKey = salad,bacon...\r\n                return [...Array(props.ingredients[igKey])] //[salad] one at time salad value = [2] then map two time same element\r\n                .map((_,i) =>{\r\n                      return  <BurgerIngredient key={igKey + i} type={igKey} />; //key = salad0,salad1,backon0,cheese0,cheese1\r\n                });\r\n        })\r\n        .reduce( (arr, el) =>{ //arr gives previous value and al gives current value\r\n                return arr.concat(el) //returns total ingredients submmation\r\n        },[]);\r\n\r\n        if(transformedIngredients.length === 0){\r\n                transformedIngredients = <p style={{color: 'brown'}}>Please start adding ingredients!</p>\r\n        }\r\n        return(\r\n                <div  className={classes.Burger} >\r\n\r\n                        <BurgerIngredient type =\"bread-top\"/>\r\n                       {transformedIngredients}\r\n                        <BurgerIngredient type =\"bread-bottom\"/>\r\n                </div>\r\n        );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) =>(\r\n  <div className={classes.BuildControl} >\r\n      <div className={classes.Label} >\r\n          {props.label}\r\n      </div>\r\n      <button className={classes.More}\r\n              onClick={props.added} \r\n              >Add</button>\r\n      <button className={classes.Less}  \r\n              onClick={props.removed}\r\n              disabled={props.disabled}>Remove</button>\r\n   \r\n  </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n    \r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added ={ () => props.ingredientAdded(ctrl.type)}\r\n                removed ={ () => props.ingredientRemoved(ctrl.type)}\r\n                disabled = {props.disabled[ctrl.type]}\r\n                />\r\n        ))}\r\n       <button className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}\r\n       >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React,{Component} from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps,nextState){  \r\n            return nextProps.show !== this.props.show || nextProps.children !== this.props.children;    \r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('update1');\r\n    // }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className={classes.Modal} \r\n             style={{\r\n                 transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                 opacity: this.props.show ? '1' : '0'\r\n             }}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>\r\n        )\r\n \r\n    }\r\n}\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n    className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n> {props.children}</button>\r\n); \r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Aux'\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummery extends Component {\r\n    // componentWillUpdate(){\r\n    //     console.log('update');\r\n    // }\r\n   //can be function component\r\n    render(){\r\n            \r\n        const ingredientSummery = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (<li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:{this.props.ingredients[igKey]}\r\n            </li>);\r\n        })\r\n        \r\n        \r\n            return(\r\n                <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>\r\n                A delicious burger with the following ingredients:\r\n                    </p>\r\n            <ul>\r\n                {ingredientSummery}\r\n\r\n            </ul>\r\n            <p><strong>Total Price:{this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCLE</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n                </Aux >\r\n\r\n            );\r\n    }\r\n\r\n}   \r\n\r\n\r\n\r\n\r\nexport default OrderSummery;","import React from 'react';\r\nimport './Spinner.css'\r\nconst spinner = () => (\r\n  \r\n    <div className=\"spinner\">\r\n    <div className=\"rect1\"></div>\r\n    <div className=\"rect2\"></div>\r\n    <div className=\"rect3\"></div>\r\n    <div className=\"rect4\"></div>\r\n    <div className=\"rect5\"></div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux'\r\nconst withErrorHandler = (WrappedComponent, axios) =>{\r\n    return class extends Component{\r\n        state={\r\n            error:null,\r\n        }\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                    this.setState({error: error});\r\n            });\r\n        }\r\n        componentWillUnmont(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmedHandler = () =>{\r\n                this.setState({error:null})\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                            modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n    \r\n                </Aux>\r\n            )\r\n        }\r\n    } \r\n\r\n}\r\nexport default withErrorHandler;","import React,{ Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Aux';\r\nimport axios from '../../axios-orders';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'; \r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        purchasing:false,\r\n      }\r\n      componentDidMount(){\r\n          console.log(this.props);\r\n          this.props.onInitIngredients();    \r\n      }\r\n\r\n      purchaseHandler = () =>{\r\n        this.setState({purchasing:true});\r\n      } //purchaseHandler for activating modal \r\n\r\n      purchaseCancleHandler = () =>{\r\n        this.setState({purchasing: false});\r\n      } // purchaseCancleHandler for Deactivating modal \r\n\r\n      purchaseContinueHandler = () =>{ \r\n        this.props.onInitPurchase(); \r\n        this.props.history.push('/checkout');\r\n      }  // purchaseContinueHandler for redirecting to checkout page\r\n\r\n      updatePurchaseState = (ingredients) =>{\r\n\r\n        const sum = Object.keys(ingredients)\r\n        .map( igKey =>{\r\n          return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) =>{\r\n          return sum + el;\r\n        },0)\r\n         return sum>0;\r\n      } //updatePurchaseState form orderButton activation\r\n\r\n\r\n      \r\n\r\n    render(){\r\n      const disabledInfo ={\r\n        ...this.props.ings\r\n      };\r\n      for(let key in disabledInfo){\r\n        disabledInfo[key] = disabledInfo[key] <= 0; // salad = true, bacon = false\r\n      }\r\n      // order summery for Modal data\r\n      let orderSummery = null;\r\n      \r\n      let burger = this.props.error ? <p>Ingredients Can't be loaded</p> :<Spinner />;\r\n      if(this.props.ings){\r\n        burger = ( \r\n          <Aux>  \r\n          <Burger ingredients={this.props.ings} />\r\n          <BuildControls \r\n              ingredientAdded = {this.props.onIngredientAdded} \r\n              ingredientRemoved = {this.props.onIngredientRemoved}\r\n              disabled = {disabledInfo} // to disable more button\r\n              purchasable= {this.updatePurchaseState(this.props.ings)}//for order button\r\n              price = {this.props.price}\r\n              ordered={this.purchaseHandler}/> \r\n          </Aux>\r\n        );\r\n        \r\n\r\n      orderSummery =  <OrderSummery \r\n      ingredients={this.props.ings} \r\n      purchaseCancelled={this.purchaseCancleHandler}\r\n      purchaseContinued={this.purchaseContinueHandler}\r\n      price={this.props.price} />;\r\n      }\r\n    \r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancleHandler}> \r\n                {orderSummery} \r\n                </Modal>            \r\n                {burger}\r\n            </Aux>\r\n            \r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n      return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n      };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit())\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\n\r\nexport const initIngredients = () => {\r\n            return dispatch => {\r\n                axios.get( 'https://your-chef-c5f25.firebaseio.com/ingredients.json' )\r\n                    .then( response => {\r\n                    dispatch(setIngredients(response.data));\r\n                    } )\r\n                    .catch( error => {\r\n                        dispatch(fetchIngredientsFailed());\r\n                    } );\r\n            };      \r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n","import axios from '../../axios-orders'; \r\nimport * as actionType from './actionTypes';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData \r\n    };\r\n};\r\n\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_FAIL,\r\n        error: error    \r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionType.PURCHASE_BURGER_START\r\n    };\r\n};\r\nexport const purchaseBurger = ( orderData) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json', orderData )\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionType.PURCHASE_INIT\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n// FOR ORDER JS\r\n\r\n\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderfail = (error) => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionType.FETCH_ORDERS_START,\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        axios.get('./orders.json')\r\n        .then(res =>{\r\n            const fetchedOrders = [];\r\n            for ( let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders));\r\n        })\r\n        .catch( err => {\r\n            dispatch(fetchOrderfail());\r\n        });\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummery.module.css';\r\nconst checkoutSummery = (props) =>{\r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>\r\n                We hope it taste well!\r\n            </h1>\r\n            <div style = { {width: '300px', height : '300px', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n                    clicked={props.onCheckoutCancelled}\r\n                    >CANCLE</Button>\r\n            <Button btnType=\"Success\"\r\n                    clicked={props.onCheckoutContinued}\r\n            >CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummery;","import React from 'react';\r\nimport classes from './Input.module.css';\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const InputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        InputClasses.push(classes.Invalid);\r\n    }\r\n    switch(props.elementType)\r\n    {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}\r\n             value={props.value} \r\n             onChange={props.changed}/>;\r\n            break;\r\n\r\n        case ('textarea'):\r\n            inputElement = <textarea  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break; \r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                className={InputClasses.join(' ')} \r\n                value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n    }\r\n    return(\r\n     \r\n    <div  className={classes.Input}>\r\n    <label  className={classes.Label}>{props.Label}</label>\r\n           {inputElement}\r\n    </div>   \r\n    )\r\n};\r\nexport default input;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nclass ContactData extends Component{\r\n    state ={\r\n        orderForm:{\r\n                name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your Name'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n                },\r\n                street: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Street'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },                 \r\n                     valid : false,\r\n                     touched: false\r\n\r\n                },\r\n                zipCode: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'ZIP code'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:5\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                country: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Country'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Email'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                deliveryMethod: {\r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options:[\r\n                            { value: 'fastest', displayValue: 'Fastest' },\r\n                            { value: 'cheapest', displayValue: 'Cheapest' }\r\n                        ]\r\n                    },\r\n                    value: 'Fastest',\r\n                    validation:{},\r\n                    valid : true,\r\n                }\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) =>{\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for( let formElementIdenfire in this.state.orderForm){\r\n            formData[formElementIdenfire] = this.state.orderForm[formElementIdenfire].value; \r\n        }\r\n        const order ={\r\n          ingredients : this.props.ings,\r\n          price: this.props.price,\r\n          orderData : formData \r\n        }\r\n        \r\n        this.props.onOrderBurger(order);\r\n    }\r\n    inputChangedHandler = (event,inputIdentifier) =>{\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.touched = true;\r\n        console.log(updatedFormElement.valid);\r\n        let formIsValid = true;\r\n        for( let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {\r\n                    formElementArray.map( formElement =>(\r\n                        <Input \r\n                        key = {formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid = {!formElement.config.valid}\r\n                        touched = {formElement.config.touched}\r\n                        shouldValidate = {formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event,formElement.id)} />\r\n                    ))\r\n                }\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading){\r\n            form =<Spinner />;\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact data</h4>\r\n                 {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ings : state.burgerBuilder.ingredients,\r\n      price : state.burgerBuilder.totalPrice ,\r\n      loading : state.order.loading\r\n     }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))        \r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React, { Component } from 'react';\r\nimport CheckoutSummery from '../../components/Order/CheckoutSummery/CheckoutSummery';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport ContactData from './ContactData/ContactData';\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancledHandler = () => {\r\n        this.props.history.goBack();\r\n        // console.log(this.props);\r\n    } // checkoutCancledHandler go back to burger Builder page\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    // Route is used for displaying the contactData component\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null ;\r\n            summary = (    \r\n                <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummery\r\n                ingredients={this.props.ings}\r\n                onCheckoutCancelled={this.checkoutCancledHandler}\r\n                onCheckoutContinued={this.checkoutContinuedHandler} />\r\n                <Route path={this.props.match.path + '/contact-data'}  \r\n                      component={ContactData} />               \r\n                </div> \r\n              ); \r\n               \r\n        }\r\n        return summary;\r\n\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ings : state.burgerBuilder.ingredients,\r\n      purchased: state.order.purchased\r\n     };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\nfor( let ingredientsName in props.ingredients){\r\n    ingredients.push({name : ingredientsName,\r\n                     amount: props.ingredients[ingredientsName]\r\n                    });\r\n}\r\n\r\n    let ingredientsOutput = ingredients.map(ig =>{\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount}) </span>;\r\n    }) \r\n     \r\n    return(\r\n        <div className={classes.Order} >\r\n        <p>Ingredients : {ingredientsOutput}</p>\r\n        <p> <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong> </p>\r\n    </div>\r\n    );\r\n \r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'; \r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n        if ( !this.props.loading ) {\r\n            orders = this.props.orders.map( order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ) )\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch( actions.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, { Component } from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n\n  render(){\n    return(\n        <div>\n            <Layout>\n              <Switch>\n              <Route path=\"/checkout\" component = {Checkout} />\n              <Route path=\"/orders\" component = {Orders} />\n              <Route path=\"/your-chef\" exact component = {BurgerBuilder} /> \n              <Route path=\"/\" exact component = {BurgerBuilder} />\n              </Switch>\n            </Layout>\n        </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject  = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionType from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case actionType.PURCHASE_INIT:\r\n            return updateObject(state,{purchased:false});\r\n\r\n        case actionType.PURCHASE_BURGER_START:\r\n            return updateObject(state,{  loading: true});\r\n\r\n        case actionType.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData,{id: action.orderId});\r\n            return updateObject(state,{\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n\r\n        case actionType.PURCHASE_BURGER_FAIL:\r\n        return updateObject(state,{ loading: false});\r\n\r\n        case actionType.FETCH_ORDERS_START:\r\n        return updateObject(state,{ loading: true});\r\n\r\n        case actionType.FETCH_ORDERS_SUCCESS:\r\n        return updateObject(state,{ orders: action.orders, loading: false});\r\n\r\n        case actionType.FETCH_ORDERS_FAIL:\r\n        return updateObject(state,{ loading: false});\r\n\r\n        default:\r\n            return state;\r\n        }\r\n};\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore,applyMiddleware,combineReducers,compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder : burgerBuilderReducer,\n  order: orderReducer\n});\nconst store = createStore(rootReducer,composeEnhancers(\n  applyMiddleware(thunk)\n));\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(\n  app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
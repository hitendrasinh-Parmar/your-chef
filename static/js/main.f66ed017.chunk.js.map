{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-img.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Order/CheckoutSummery/CheckoutSummery.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummery/OrderSummery.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummery/CheckoutSummery.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Meat","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","color","Burger","buildControl","BuildControl","Label","label","More","added","Less","removed","disabled","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummery","ingredientSummery","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","purchaseHandler","purchaseCancleHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","updatePurchaseState","sum","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","oldCount","priceDeduction","get","then","data","catch","disabledInfo","orderSummery","checkoutSummery","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","InputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdenfire","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","console","log","rules","isValid","trim","formElementArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","CheckoutSummery","path","match","render","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","component","Orders","BurgerBuilder","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f66ed017.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1y01d\",\"BreadTop\":\"BurgerIngredient_BreadTop__2lZyM\",\"Seeds1\":\"BurgerIngredient_Seeds1__Kg0k1\",\"Seeds2\":\"BurgerIngredient_Seeds2__2vSXo\",\"Meat\":\"BurgerIngredient_Meat__uDRCP\",\"Cheese\":\"BurgerIngredient_Cheese__31lmR\",\"Salad\":\"BurgerIngredient_Salad__2O2NA\",\"Bacon\":\"BurgerIngredient_Bacon__3-GeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2IPN9\",\"Open\":\"SideDrawer_Open__2jjhT\",\"Close\":\"SideDrawer_Close__3MZ7O\",\"Logo\":\"SideDrawer_Logo__71B8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1b0DE\",\"Label\":\"BuildControl_Label__1S7kJ\",\"Less\":\"BuildControl_Less__1HMdg\",\"More\":\"BuildControl_More__2M-3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__piVat\",\"Label\":\"Input_Label__2jVuX\",\"InputElement\":\"Input_InputElement__pxmEj\",\"Invalid\":\"Input_Invalid__hrUJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1zKj_\",\"Logo\":\"Toolbar_Logo__2usnd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1AT2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__mVNzT\",\"active\":\"NavigationItem_active__3lBqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2awep\",\"OrderButton\":\"BuildControls_OrderButton__3iNJS\",\"enable\":\"BuildControls_enable__1ulil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__XfKfJ\",\"Success\":\"Button_Success__2FVDK\",\"Danger\":\"Button_Danger__SBb9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1MRYB\"};","module.exports = __webpack_public_path__ + \"static/media/burger-img.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2EEVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1mwF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__Mca3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__QLP1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ihykU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Vbek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummery_CheckoutSummary__1IFTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__RTRv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1UsQj\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-img.png';\r\nimport classes from './Logo.module.css';\r\nconst logo = (props) =>(\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Burger\"/>\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) =>(\r\n         \r\n            <li className={classes.NavigationItem}>\r\n                 <NavLink \r\n                 exact={props.exact}\r\n                 to={props.link}\r\n                 activeClassName={classes.active}>{props.children}</NavLink>\r\n            </li>\r\n       \r\n);\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) =>{\r\n    \r\nreturn(    \r\n\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n}\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\nconst backdrop = (props) =>(\r\n   \r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n \r\n);\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses= [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer,classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        \r\n        <div className={attachedClasses.join(' ')}>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n            \r\n            <nav>\r\n                <NavigationItems />\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react';\r\nimport Aux from '../../hoc/Aux'\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state={\r\n        showSideDrawer: false\r\n    }\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer :false});\r\n    }\r\n    //for menu btm to toggle the sideDrawer\r\n    sideDrawerToggleHandler = () =>{\r\n        this.setState( (prevState) =>{\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    } \r\n    render(){\r\n        return (\r\n            <Aux>\r\n            <Toolbar\r\n            drawerToggleClicked={this.sideDrawerToggleHandler} \r\n            />\r\n            <SideDrawer closed={this.sideDrawerClosedHandler}\r\n                        open={this.state.showSideDrawer}\r\n            />\r\n        \r\n        <main className={classes.Content} >\r\n            {this.props.children}\r\n        </main>\r\n        </Aux>\r\n        )\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Layout;","import React,{Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render (){\r\n        let ingredient = null;\r\n        switch (this.props.type){\r\n             case (\"bread-bottom\"):\r\n             ingredient = <div className={classes.BreadBottom} ></div>;\r\n             break; \r\n    \r\n             case (\"bread-top\"):\r\n             ingredient = <div className={classes.BreadTop} >\r\n             <div className={classes.Seeds1} ></div>\r\n             <div className={classes.Seeds2} ></div>\r\n             </div>;\r\n             break;\r\n    \r\n            case (\"cheese\"):\r\n             ingredient = <div className={classes.Cheese} ></div>;\r\n             break; \r\n             \r\n            case (\"meat\"):\r\n                ingredient = <div className={classes.Meat} ></div>;\r\n                break; \r\n    \r\n            case (\"salad\"):\r\n                    ingredient = <div className={classes.Salad} ></div>;\r\n                    break; \r\n    \r\n            case (\"bacon\"):\r\n                    ingredient = <div className={classes.Bacon} ></div>;\r\n                     break;\r\n            default:\r\n                ingredient = null; \r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) =>{\r\n        let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n                return [...Array(props.ingredients[igKey])]\r\n                .map((_,i) =>{\r\n                      return  <BurgerIngredient key={igKey + i} type={igKey} />;\r\n                });\r\n        })\r\n        .reduce( (arr, el) =>{\r\n                return arr.concat(el)\r\n        },[]);\r\n\r\n        if(transformedIngredients.length === 0){\r\n                transformedIngredients = <p style={{color: 'brown'}}>Please start adding ingredients!</p>\r\n        }\r\n        return(\r\n                <div  className={classes.Burger} >\r\n\r\n                        <BurgerIngredient type =\"bread-top\"/>\r\n                       {transformedIngredients}\r\n                        <BurgerIngredient type =\"bread-bottom\"/>\r\n                </div>\r\n        );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) =>(\r\n  <div className={classes.BuildControl} >\r\n      <div className={classes.Label} >\r\n          {props.label}\r\n      </div>\r\n      <button className={classes.More}\r\n              onClick={props.added} \r\n              >Add</button>\r\n      <button className={classes.Less}  \r\n              onClick={props.removed}\r\n              disabled={props.disabled}>Remove</button>\r\n   \r\n  </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added ={ () => props.ingredientAdded(ctrl.type)}\r\n                removed ={ () => props.ingredientRemoved(ctrl.type)}\r\n                disabled = {props.disabled[ctrl.type]}\r\n                />\r\n        ))}\r\n       <button className={classes.OrderButton}\r\n                disabled={!props.purchasable}\r\n                onClick={props.ordered}\r\n       >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React,{Component} from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps,nextState){  \r\n            return nextProps.show !== this.props.show || nextProps.children !== this.props.children;    \r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('update1');\r\n    // }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className={classes.Modal} \r\n             style={{\r\n                 transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                 opacity: this.props.show ? '1' : '0'\r\n             }}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>\r\n        )\r\n \r\n    }\r\n}\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n    className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n> {props.children}</button>\r\n); \r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Aux'\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummery extends Component {\r\n    // componentWillUpdate(){\r\n    //     console.log('update');\r\n    // }\r\n   //can be function component\r\n    render(){\r\n            \r\n        const ingredientSummery = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (<li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:{this.props.ingredients[igKey]}\r\n            </li>);\r\n        })\r\n        \r\n        \r\n            return(\r\n                <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>\r\n                A delicious burger with the following ingredients:\r\n                    </p>\r\n            <ul>\r\n                {ingredientSummery}\r\n\r\n            </ul>\r\n            <p><strong>Total Price:{this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCLE</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n                </Aux >\r\n\r\n            );\r\n    }\r\n\r\n}   \r\n\r\n\r\n\r\n\r\nexport default OrderSummery;","import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:'https://your-chef-c5f25.firebaseio.com/'\r\n});\r\nexport default instance;","import React from 'react';\r\nimport './Spinner.css'\r\nconst spinner = () => (\r\n  \r\n    <div className=\"spinner\">\r\n    <div className=\"rect1\"></div>\r\n    <div className=\"rect2\"></div>\r\n    <div className=\"rect3\"></div>\r\n    <div className=\"rect4\"></div>\r\n    <div className=\"rect5\"></div>\r\n    </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux'\r\nconst withErrorHandler = (WrappedComponent, axios) =>{\r\n    return class extends Component{\r\n        state={\r\n            error:null,\r\n        }\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                    this.setState({error: error});\r\n            });\r\n        }\r\n        componentWillUnmont(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmedHandler = () =>{\r\n                this.setState({error:null})\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error}\r\n                            modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n    \r\n                </Aux>\r\n            )\r\n        }\r\n    } \r\n\r\n}\r\nexport default withErrorHandler;","import React,{ Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nconst INGREDIENT_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n\r\n}\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        ingredients :null,\r\n        totalPrice : 4,\r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false,\r\n      }\r\n      componentDidMount(){\r\n        axios.get('https://your-chef-c5f25.firebaseio.com/ingredients.json')\r\n        .then(response =>{\r\n          this.setState({ingredients: response.data});\r\n        })\r\n        .catch(error => {\r\n          this.setState({error:true});\r\n        });\r\n      }\r\n      purchaseHandler = () =>{\r\n        this.setState({purchasing:true});\r\n      }\r\n\r\n      purchaseCancleHandler = () =>{\r\n        this.setState({purchasing: false});\r\n      }\r\n      purchaseContinueHandler = () =>{\r\n        \r\n      const queryParams = [];\r\n      for( let i in this.state.ingredients){\r\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n      }\r\n      queryParams.push('price='+this.state.totalPrice);\r\n      const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n          pathname: '/checkout',\r\n          search: '?' + queryString\r\n        });\r\n      }\r\n      updatePurchaseState = (ingredients) =>{\r\n        // const ingredients ={\r\n        //   ...this.state.ingredients\r\n        // };\r\n\r\n        const sum = Object.keys(ingredients)\r\n        .map( igKey =>{\r\n          return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) =>{\r\n          return sum + el;\r\n        },0)\r\n        this.setState({purchasable: sum>0});\r\n      }\r\n\r\n      addIngredientHandler = (type) =>{\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice =this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n      }\r\n      removeIngredientHandler =(type) =>{\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n          return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice =this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n\r\n      }\r\n      \r\n\r\n    render(){\r\n      const disabledInfo ={\r\n        ...this.state.ingredients\r\n      };\r\n      for(let key in disabledInfo){\r\n        disabledInfo[key] = disabledInfo[key] <=0;\r\n      }\r\n      let orderSummery = null;\r\n      \r\n      let burger = this.state.error ? <p>Ingredients Can't be loaded</p> :<Spinner />; \r\n      \r\n      if(this.state.ingredients){\r\n        burger = ( \r\n          <Aux>\r\n          <Burger ingredients={this.state.ingredients} />\r\n          <BuildControls \r\n              ingredientAdded = {this.addIngredientHandler}\r\n              ingredientRemoved = {this.removeIngredientHandler}\r\n              disabled = {disabledInfo}\r\n              purchasable= {this.state.purchasable}\r\n              price = {this.state.totalPrice}\r\n              ordered={this.purchaseHandler}/> \r\n          </Aux>\r\n        );\r\n\r\n          orderSummery =  <OrderSummery \r\n          ingredients={this.state.ingredients} \r\n          purchaseCancelled={this.purchaseCancleHandler}\r\n          purchaseContinued={this.purchaseContinueHandler}\r\n          price={this.state.totalPrice} />;\r\n      }\r\n      if(this.state.loading){\r\n        orderSummery = <Spinner />;\r\n      }\r\n     \r\n\r\n        return(\r\n            <Aux>\r\n                        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancleHandler}> \r\n                        {orderSummery} \r\n                        </Modal>            \r\n                        {burger}\r\n            </Aux>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummery.module.css';\r\nconst checkoutSummery = (props) =>{\r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>\r\n                We hope it taste well!\r\n            </h1>\r\n            <div style = { {width: '300px', height : '300px', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n                    clicked={props.onCheckoutCancelled}\r\n                    >CANCLE</Button>\r\n            <Button btnType=\"Success\"\r\n                    clicked={props.onCheckoutContinued}\r\n            >CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummery;","import React from 'react';\r\nimport classes from './Input.module.css';\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const InputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        InputClasses.push(classes.Invalid);\r\n    }\r\n    switch(props.elementType)\r\n    {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}\r\n             value={props.value} \r\n             onChange={props.changed}/>;\r\n            break;\r\n\r\n        case ('textarea'):\r\n            inputElement = <textarea  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break; \r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                className={InputClasses.join(' ')} \r\n                value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input  \r\n            className={InputClasses.join(' ')} \r\n            {...props.elementConfig}  \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n    }\r\n    return(\r\n     \r\n    <div  className={classes.Input}>\r\n    <label  className={classes.Label}>{props.Label}</label>\r\n           {inputElement}\r\n    </div>   \r\n    )\r\n};\r\nexport default input;","import React,{Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nclass ContactData extends Component{\r\n    state ={\r\n        orderForm:{\r\n                name: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Your Name'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n                },\r\n                street: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Street'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },                 \r\n                     valid : false,\r\n                     touched: false\r\n\r\n                },\r\n                zipCode: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'ZIP code'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true,\r\n                        minLength:5,\r\n                        maxLength:5\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                country: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Country'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                email: {\r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Email'\r\n                    },\r\n                    value: '',\r\n                    validation:{\r\n                        required: true\r\n                    },\r\n                    valid : false,\r\n                    touched: false\r\n\r\n                },\r\n                deliveryMethod: {\r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options:[\r\n                            { value: 'fastest', displayValue: 'Fastest' },\r\n                            { value: 'cheapest', displayValue: 'Cheapest' }\r\n                        ]\r\n                    },\r\n                    value: '',\r\n                    validation:{},\r\n                    valid : true,\r\n                }\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) =>{\r\n            event.preventDefault();\r\n            // alert(\"You continue..\")\r\n        this.setState({  loading:true  });\r\n        const formData = {};\r\n        for( let formElementIdenfire in this.state.orderForm){\r\n            formData[formElementIdenfire] = this.state.orderForm[formElementIdenfire].value; \r\n        }\r\n        const order ={\r\n          ingredients : this.props.ingredients,\r\n          price: this.props.price,\r\n          orderData : formData \r\n        }\r\n        axios.post('/orders.json',order)\r\n      .then(response =>{  \r\n          this.setState({loading:false});\r\n          this.props.history.push('/');\r\n    \r\n        })\r\n      .catch(error =>{   this.setState({loading:false});   });\r\n    }\r\n    inputChangedHandler = (event,inputIdentifier) =>{\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.touched = true;\r\n        console.log(updatedFormElement.valid);\r\n        let formIsValid = true;\r\n        for( let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n    render(){\r\n        const formElementArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {\r\n                    formElementArray.map( formElement =>(\r\n                        <Input \r\n                        key = {formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid = {!formElement.config.valid}\r\n                        touched = {formElement.config.touched}\r\n                        shouldValidate = {formElement.config.validation}\r\n                        changed={(event) => this.inputChangedHandler(event,formElement.id)} />\r\n                    ))\r\n                }\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading){\r\n            form =<Spinner />;\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact data</h4>\r\n                 {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ContactData;","import React, { Component } from 'react';\r\nimport CheckoutSummery from '../../components/Order/CheckoutSummery/CheckoutSummery';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients : null,\r\n        price : 0\r\n        \r\n        \r\n    }\r\n\r\n    componentWillMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price;\r\n        for( let param of query.entries()){\r\n            if(param[0] === 'price'){\r\n                price = param[1];\r\n            }\r\n            else{\r\n                ingredients[param[0]] = +param[1]\r\n            }\r\n        }\r\n        this.setState({ingredients : ingredients, totalPrice:price})\r\n    }\r\n    checkoutCancledHandler = () => {\r\n        this.props.history.goBack();\r\n        // console.log(this.props);\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummery ingredients={this.state.ingredients}\r\n                                 onCheckoutCancelled={this.checkoutCancledHandler}\r\n                                 onCheckoutContinued={this.checkoutContinuedHandler} />\r\n            <Route path={this.props.match.path + '/contact-data'}  \r\n                   render={ (props) => (<ContactData ingredients={this.state.ingredients } price={this.state.totalPrice} {...props} />)} />                  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\nfor( let ingredientsName in props.ingredients){\r\n    ingredients.push({name : ingredientsName,\r\n                     amount: props.ingredients[ingredientsName]\r\n                    });\r\n}\r\n\r\n    let ingredientsOutput = ingredients.map(ig =>{\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount}) </span>;\r\n    }) \r\n     \r\n    return(\r\n        <div className={classes.Order} >\r\n        <p>Ingredients : {ingredientsOutput}</p>\r\n        <p> <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong> </p>\r\n    </div>\r\n    );\r\n \r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nclass Orders extends Component{\r\n    state = {\r\n        orders :[],\r\n        loading: true\r\n    }\r\n    componentDidMount(){\r\n        axios.get('./orders.json')\r\n        .then(res =>{\r\n            const fetchedOrders = [];\r\n            for ( let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n                this.setState({loading: false ,orders:fetchedOrders});\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false});\r\n        });\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.orders.map(order=>(\r\n                        <Order key={order.id}\r\n                        ingredients={order.ingredients}\r\n                         price={order.price} />\r\n                ))}\r\n            </div>\r\n      \r\n        );\r\n    }\r\n}      \r\n\r\n\r\nexport default withErrorHandler(Orders ,axios);","// creating the burger app \n// video 8 last completed 25 completed ,33comp  !completed 41 all\n// 9: 8th video completed\n// 10 all completed last 9th video remain\n//11 remaining\n//12 completed\n//13 -> 20 aug 2020  14 vid over\nimport React, { Component } from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n\n  render(){\n    return(\n        <div>\n            <Layout>\n              <Switch>\n              <Route path=\"/checkout\" component = {Checkout} />\n              <Route path=\"/orders\" component = {Orders} />\n              <Route path=\"/\" exact component = {BurgerBuilder} />\n              </Switch>\n            </Layout>\n        </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}